{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addfields.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/filter/searchname.pipe.ts","webpack:///src/app/reactiveform/reactiveform.component.ts","webpack:///src/app/reactiveform/reactiveform.component.html","webpack:///src/app/templateform/templateform.component.ts","webpack:///src/app/templateform/templateform.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddfieldsService","http","formdata","post","get","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","service","userDetails","firstname","lastname","email","getFormsData","subscribe","data","dataList","console","log","i","length","_id","SearchnamePipe","value","searchvalue","filter","search","indexOf","toLowerCase","name","ReactiveformComponent","formbuilder","route","reactiveform","group","required","addFormsData","navigate","getreactiveform","TemplateformComponent","f","submitform","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddfieldsService {\n  //  httpOptionsPlain = {\n  //   headers: new HttpHeaders({\n  //     'Accept': 'text/plain',\n  //     'Content-Type': 'text/plain'\n  //   }),\n  //   'responseType': 'text'\n  // };\n  constructor(private http:HttpClient) { }\n   \n  addFormsData(formdata){\n          return this.http.post(\"formdata\",formdata);\n    }\n\n    getFormsData(){\n      return this.http.get(\"formdata\");\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {TemplateformComponent} from './templateform/templateform.component';\nimport {ReactiveformComponent} from './reactiveform/reactiveform.component';\nconst routes: Routes = [\n      {path:'',component:DashboardComponent},\n      {path:'template',component:TemplateformComponent},\n      {path:'reactive',component:ReactiveformComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task3';\n}\n","<nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" routerLink='/'>Dashboard</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/template\">Template driven form</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/reactive\">Reactive form</a>\n      </li> \n    </ul>\n  </div>  \n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateformComponent } from './templateform/templateform.component';\nimport { ReactiveformComponent } from './reactiveform/reactiveform.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {FormsModule} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { SearchnamePipe } from './filter/searchname.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateformComponent,\n    ReactiveformComponent,\n    DashboardComponent,\n    SearchnamePipe,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {AddfieldsService} from '../addfields.service';\nimport {SearchnamePipe} from '../filter/searchname.pipe';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n   dataList;\n   userDetails={firstname:\"\",lastname:\"\",email:\"\"};\n   searchvalue:String;\n  // searchByLastName:String;\n  // searchByEmailName:String;\n  constructor(private service:AddfieldsService) { }\n   \n  ngOnInit(): void {\n     this.service.getFormsData().subscribe(data=>{\n      this.dataList=data;\n       console.log(data);\n     });\n\n  }\n  getDetailsUser(id){\n    for(let i=0;i<this.dataList.length;i++){\n      if(this.dataList[i]._id==id){\n        this.userDetails.firstname=this.dataList[i].firstname;\n        this.userDetails.lastname=this.dataList[i].lastname;\n        this.userDetails.email=this.dataList[i].email;\n      }\n    }\n    console.log(this.userDetails);\n  }\n}\n","\n<div class=\"container\">\n    <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search your items\" id=\"searchname\" [(ngModel)]=\"searchvalue\">\n      </div>\n      <div class=\"card\"  *ngFor=\"let data of dataList | searchname:searchvalue\" data-toggle=\"modal\" data-target=\"#userDetails\">\n          <img src=\"assets/images/earth.gif\" (click)=\"getDetailsUser(data._id)\">\n        <div class=\"card-body\" style=\"text-align: left;\">\n          <p class=\"card-text\">First Name:&nbsp;&nbsp;{{data.firstname}}</p>\n          <p class=\"card-text\">Last Name:&nbsp;&nbsp;{{data.lastname}}</p>\n          <p class=\"card-text\">Email:&nbsp;&nbsp;{{data.email}}</p>\n        </div>\n      </div>  \n  </div>\n  <div class=\"modal\" id=\"userDetails\">\n    <div class=\"modal-dialog\" style=\"width:400px;\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\">User details</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"card\">\n                <img src=\"assets/images/earth.gif\" >\n              <div class=\"card-body\">\n                <p class=\"card-text\">First Name:&nbsp;&nbsp;{{userDetails.firstname}}</p>\n                <p class=\"card-text\">Last Name:&nbsp;&nbsp;{{userDetails.lastname}}</p>\n                <p class=\"card-text\">Last Name:&nbsp;&nbsp;{{userDetails.email}}</p>\n                <h4 class=\"card-text\">Address</h4>\n                <p class=\"card-text\">\n                    Sri JP Comfort Hotel PG for Gents, Near Odiya Aahar, Balaji Layout, Dental College Road,  Munnekolala, Marathalli, Bangalore, Karnataka, Pin: 560037\n                </p>\n              </div>\n            </div>  \n        </div>\n      </div>\n    </div>\n  </div>\n  \n  ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchname'\n})\nexport class SearchnamePipe implements PipeTransform {\n\n  transform(value:any,searchvalue:any):any {\n   \n    if(!searchvalue){\n      return value;\n    }\n    return value.filter(function(search){\n      return search.firstname.indexOf(searchvalue.toLowerCase())>-1 || search.lastname.indexOf(searchvalue.toLowerCase())>-1 || search.email.indexOf(searchvalue.toLowerCase())>-1\n    });\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormBuilder,FormControl,Validator, Validators} from '@angular/forms';\nimport {AddfieldsService} from '../addfields.service';\nimport {Router} from  '@angular/router';\n@Component({\n  selector: 'app-reactiveform',\n  templateUrl: './reactiveform.component.html',\n  styleUrls: ['./reactiveform.component.css']\n})\nexport class ReactiveformComponent implements OnInit {\n\n  \n\n  reactiveform:FormGroup;\n  constructor(private formbuilder:FormBuilder,private service:AddfieldsService,private route:Router) {\n    // this.reactiveform=formbuilder.group({\n    //   firstname: new FormControl(\"\"),\n    //   lastname: new FormControl(),\n    //   email: new FormControl(),\n    //   });\n      this.reactiveform=formbuilder.group({\n        email:[\"\",\n        [Validators.required, Validators.email] ],\n         firstname:[\"\",Validators.required],\n         lastname:[\"\",Validators.required],\n\n   });\n  }\n  \n  ngOnInit(): void {\n\n  }\n  \n  getreactiveform(){\n    console.log(this.reactiveform);\n    console.log(this.reactiveform.value);\n    console.log(this.reactiveform.value.email);\n    this.service.addFormsData(this.reactiveform.value).subscribe(data=>{\n      if(data){\n          this.route.navigate(['/']);\n      }\n    });\n\n  }\n\n\n}\n","<div class=\"container\">\n <div class=\"row\">\n   <div class=\"offset-3 col-md-6\">\n    <h4>Add user details</h4>\n    <form [formGroup]=\"reactiveform\" (ngSubmit)=\"getreactiveform()\">\n        <div class=\"form-group\">\n          <label for=\"firstname\">First name:</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter first name\" id=\"pwd\" name=\"firstname\" formControlName=\"firstname\">\n          <small *ngIf=\"reactiveform.get('firstname').touched && reactiveform.get('firstname').hasError('required')\" style=\"color:red\">First name is required</small>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastname\">Last name</label>\n            <input type=\"text\"  class=\"form-control\" placeholder=\"Enter last name\" id=\"lastname\" name=\"lastname\" formControlName=\"lastname\">\n            <small *ngIf=\"reactiveform.get('lastname').touched && reactiveform.get('lastname').hasError('required')\" style=\"color:red\">Last name is required</small>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email address:</label>\n            <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" id=\"email\"  name=\"email\" formControlName=\"email\">\n            <small *ngIf=\"reactiveform.get('email').touched && reactiveform.get('email').hasError('required')\" style=\"color:red\">Email is required</small>\n            <small *ngIf=\"reactiveform.get('email').touched && reactiveform.get('email').hasError('email')\" style=\"color:red\">Please enter valid email</small>\n  </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!reactiveform.valid\">Submit</button>\n      </form>\n</div>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AddfieldsService} from '../addfields.service';\nimport {Router} from  '@angular/router';\n@Component({\n  selector: 'app-templateform',\n  templateUrl: './templateform.component.html',\n  styleUrls: ['./templateform.component.css']\n})\nexport class TemplateformComponent implements OnInit {\n\n  constructor(private service:AddfieldsService,private route:Router) { }\n\n  ngOnInit(): void {\n  }\n  submitform(f){\n   // console.log(f.value);\n   this.service.addFormsData(f.value).subscribe(data=>{\n    if(data){\n      this.route.navigate(['/']);\n  }\n   });\n    \n  }\n\n}\n","<div class=\"container\">\n <div class=\"row\">\n  <div class=\"offset-3 col-md-6\">\n    <h4>Add users details</h4>\n    <form #templateform=\"ngForm\" (ngSubmit)=\"submitform(templateform)\" required>\n        <div class=\"form-group\">\n          <label for=\"firstname\">First name:</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter first name\" id=\"firstname\" name=\"firstname\" ngModel required #firstname=\"ngModel\">\n          <small *ngIf=\"firstname.invalid && firstname.touched\" style=\"color:red\">First name is required</small>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastname\">Last name</label>\n            <input  class=\"form-control\" placeholder=\"Enter last name\" id=\"lastname\" name=\"lastname\" ngModel required #lastname=\"ngModel\">\n            <small *ngIf=\"lastname.invalid && lastname.touched\" style=\"color:red\">Last name is required</small>\n        </div>\n         <div class=\"form-group\">\n            <label for=\"email\">Email address:</label>\n            <input type=\"email\" class=\"form-control\" email placeholder=\"Enter email\" id=\"email\"  name=\"email\" ngModel required #email=\"ngModel\">\n            <div *ngIf=\"!email?.valid && (email?.dirty || email?.touched)\">\n                <small *ngIf=\"email.errors.required\" style=\"color:red\">\n                  Email is required\n                </small>\n                <small *ngIf=\"email.errors.email\" style=\"color:red\">\n                  Invalid Email Address\n                </small>\n              </div> \n             </div>  \n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!templateform.valid\">Submit</button>\n      </form>\n    </div>\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}